FORMAT: 1A
HOST: http://api.bombbomb.com

# bombbomb
The BombBomb API controls email creation, sending and tracking within the BombBomb system..

## Authentication
The **Bombbomb API** can be authenticated via a session token retrieved from the /authentication resource, or by an API_Key. 

Almost every resource except for /clients:POST, /email-jobs:GET, and /vidoes:GET requires authentication.

## Media Types
Where applicable this API uses the [HAL+JSON](https://github.com/mikekelly/hal_specification/blob/master/hal_specification.md) media-type to represent resources states and affordances.

Requests with a message-body are using plain JSON to set or update resource states.

# Group Client
Client related resources of the **Bombbomb API**

## Client [/clients/{id}]
A single Client object. 

- id
- name
- created_at
- login_email

The states *id* and *created_at* are assigned by the **BombBomb API** at the moment of creation. 

+ Parameters
    + id (Guid) ... ID of the Client in the form of a Guid.

+ Model (application/hal+json)

    HAL+JSON representation of Gist Resource. In addition to representing its state in the JSON form it offers affordances in the form of the HTTP Link header and HAL links.

    + Headers

            Link: <http:/api.bombbomb.com/clients/cccccccc-1111-aaaa-aaaa-aaaaaaaaaaaa>;rel="self"

    + Body

            {
                "_links": {
                    "self": { "href": "/clients/cccccccc-1111-aaaa-aaaa-aaaaaaaaaaaa" },
                },
                id: "cccccccc-1111-aaaa-aaaa-aaaaaaaaaaaa",
                created_at: "2014-01-02T07:15:15+00:00",
                name: "Fantastic Marketeers",
                login_email: "fan.market@gmail.com",
                status: "ACTIVE",
                subscription: ""
            }

### Retrieve a Single Client [GET]
+ Response 200
    
    [Client][]

### Create a Client [POST]

This will create a BombBomb client assuming that the login_email is not currently associated with an existing client.

A client is initially given a FREE TRIAL subscription. This can be changed by adding a payment method and then alternative subscription plan.

+ Request (application/json)

        { 
            login_email: "new.user@mail.com",
            name: "Real Scrappy Realtors",
        }

+ Response 201 (application/json)

        {
            "_links": {
                "self": { "href": "/clients/cccccccc-1111-aaaa-aaaa-aaaaaaaaaaaa" },
            },
            id: "cccccccc-3333-aaaa-aaaa-aaaaaaaaaaaa",
            created_at: "2014-01-09T16:22:03-07:00",
            name: "Fantastic Marketeers",
            login_email: "fan.market@gmail.com",
            status: "ACTIVE"
        }

## Clients Collection [/clients{?since}]
Collection of all Clients.

The Client Collection resource has the following attribute:

- total

In addition it **embeds** *Client Resources* in the BombBomb API.

+ Model (application/hal+json)

    HAL+JSON representation of Client Collection Resource. The Client resources in collections are embedded. Note the embedded Gists resource are incomplete representations of the Client in question. Use the respective Client link to retrieve its full representation.

    + Headers

            Link: <http:/api.bombbomb.com/clients>;rel="self"

    + Body

            {
                _links: {
                    self: { "href": "/clients" }
                },
                _embedded: {
                    clients: [
                        {
                            _links : {
                                self: { "href": "/clients/cccccccc-1111-aaaa-aaaa-aaaaaaaaaaaa" }
                            },
                            id: "cccccccc-1111-aaaa-aaaa-aaaaaaaaaaaa",
                            created_at: "2014-01-02T07:15:15+00:00",
                            name: "Fantastic Marketeers",
                            login_email: "fan.market@gmail.com",
                            status: "ACTIVE"
                        },
                        {
                            _links : {
                                self: { "href": "/clients/cccccccc-1111-aaaa-aaaa-aaaaaaaaaaaa" }
                            },
                            id: "cccccccc-2222-aaaa-aaaa-aaaaaaaaaaaa",
                            created_at: "2013-11-05T08:15:15+00:00",
                            name: "Adequate Advertisers",
                            login_email: "ads_r_us@yahoo.com",
                            status: "EXPIRED"
                            
                        },
                    ]
                },
                total: 2
            }
            
### List all Clients [GET]

+ Parameters
    + since (optional, string) ... Timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SS+00:00` Only clients created at or after this time are returned. Defaults to one week previous.

+ Response 200

    [Clients Collection][]
    


# Group Emails
Email related resources of the **Bombbomb API**

## Emails Collection [/emails]
### List all Emails [GET]

- id
- title
- description
- content

+ Response 200 (application/json)

        [{
          "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
          "title": "Jogging in park"
        }, {
          "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaab",
          "title": "Pick-up posters from post-office"
        }]

### Create an Email [POST]
+ Request (application/json)

        {
            "title": "Buy cheese and bread for breakfast."
        }

+ Response 201 (application/json)

        { "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaac", "title": "Buy cheese and bread for breakfast." }

## Email [/emails/{id}]
A single Email object with all its details

- id
- title
- description
- content

+ Parameters
    + id (required, guid, `aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa`) ... Guid `id` of the Email to perform action with. Has example value.

### Retrieve an Email [GET]

+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            {
                "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaab",
                "title": "Pick-up posters from post-office"
            }

### Remove an Email [DELETE]
+ Response 204



## Email Tracking [/emails/tracking/{id}]
Retrieve email tracking details

- id
- title
- description
- content

+ Parameters
    + id (required, guid, `aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa`) ... Guid `id` of the Email to perform action with. Has example value.

### Retrieve tracking details on Email [GET]

+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            {
                "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaab",
                "title": "Pick-up posters from post-office"
            }








# Group Videos
Video related resources of the **Bombbomb API**

## Videos Collection [/videos]
### List all Videos [GET]
+ Response 200 (application/json)

        [{
          "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", "title": "Jogging in park"
        }, {
          "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaab", "title": "Pick-up posters from post-office"
        }]

### Create a Video [POST]
+ Request (application/json)

        { 
            title: "Great House on Broadway",
            original_src: "s3.bombbomb.com/uploads/dddddd-aaaa-1111-abcdef.mpg"
        }

+ Response 201 (application/json)

        { "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaac", "title": "Buy cheese and bread for breakfast." }

## Video [/videos/{id}]
Retrieve a single Video object with all its details. The Video resource has the following attributes:

- id
- title
- description
- content


+ Parameters
    + id (required, string, `aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa`) ... Guid `id` of the Video to perform action with. Has example value.

### Retrieve an Video [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaab", "title": "Pretty funny video" }

### Update Video Details [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaab", "title": "Pretty funny video" }

